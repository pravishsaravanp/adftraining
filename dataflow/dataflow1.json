{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "BookSalesOurce",
						"type": "DatasetReference"
					},
					"name": "BookSalesSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "BookSalesDB",
						"type": "DatasetReference"
					},
					"name": "sinkCurrent"
				},
				{
					"dataset": {
						"referenceName": "BookSaleArchive",
						"type": "DatasetReference"
					},
					"name": "sinkArchive"
				}
			],
			"transformations": [
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          BookID as string,",
				"          SoldDate as date,",
				"          SoldPrice as decimal(10,0)",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: true,",
				"     ignoreNoFilesFound: false) ~> BookSalesSource",
				"BookSalesSource split(year(SoldDate) == 2005,",
				"     disjoint: false) ~> split1@(CurrentData, ArchiveData)",
				"split1@CurrentData sink(allowSchemaDrift: false,",
				"     validateSchema: true,",
				"     input(",
				"          BookSaleID as integer,",
				"          ISBN as string,",
				"          SoldDate as timestamp,",
				"          SoldPrice as decimal(19,4)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sinkCurrent",
				"split1@ArchiveData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          BookSaleArchiveID as integer,",
				"          ISBN as string,",
				"          SoldDate as timestamp,",
				"          SoldPrice as decimal(19,4)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sinkArchive"
			]
		}
	}
}